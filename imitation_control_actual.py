import math
import main
import time

# Helper function to convert degree lists to radians
def deg_to_rad(deg_list):
    return [math.radians(a) for a in deg_list]

# # Define degree-based angle sets from motion.getJointNames('Body')
ex1_1 = deg_to_rad([-0.53, -10.02, 121.38, 8.26, -99.67, 0.44, 90.53, 48.59, -9.58, 6.95, 7.47, -5.19, 4.74, -6.5, -9.58, -6.94, 7.12, -5.1, 5.19, 6.59, 122.35, -0.62, 81.74, 0.62, -86.31, 43.41])
ex1_2 = deg_to_rad([-0.35, -10.02, 84.9, 11.95, -69.44, -23.11, 6.5, 17.72, -9.67, 6.95, 7.39, -5.54, 4.83, -6.5, -9.67, -6.85, 7.03, -5.45, 5.01, 6.51, 84.99, -12.04, 68.38, 23.03, 4.66, 17.62])
ex1_3 = deg_to_rad([-0.35, -10.02, 78.22, 6.33, -83.5, -67.85, -1.23, 38.96, -9.67, 6.95, 7.39, -5.19, 5.1, -6.59, -9.67, -6.85, 7.2, -5.36, 5.1, 6.51, 84.2, -1.58, 92.46, 72.86, 3.34, 44.48])

ex2_0 = deg_to_rad([0, -9.74, 119.49, 40.6, -68.39, -23.56, 5.73, 17.19, -9.73, 6.8, 7.32, -5.29, 5, -6.34, -9.73, -6.82, 7.31, -5.29, 5, 6.35, 119.5, -40.7, 68.43, 23.55, 5.75, 17.22])
ex2_1 = deg_to_rad([-0.44, -10.64, 120.41, 28.21, -11.69, -87.71, -97.21, 17.67, -9.84, 6.86, 7.39, -5.19, 4.92, -6.41, -9.84, -6.85, 7.2, -5.27, 5.01, 6.42, 119.62, -26.9, 9.75, 79.9, 77.69, 17.67])
ex2_2 = deg_to_rad([-0.18, -11.52, 118.65, 36.21, -5.8, -81.91, -96.6, 17.6, 3.52, 8.97, 28.04, 28.83, -28.04, -8.87, 3.52, -8.17, 27.77, 27.25, -26.45, 8.97, 118.74, -34.54, 5.71, 73.83, 79.45, 19.11])
ex2_3 = deg_to_rad([0.17, -11.08, 118.56, 35.59, -7.56, -81.91, -96.51, 17.6, -13.01, 5.1, -7.29, -5.45, 4.39, -7.29, -13.01, -5.8, -7.47, -5.36, 3.96, 8.26, 118.57, -33.05, 6.33, 74.27, 78.75, 19.11])

ex3_0 = deg_to_rad([-0.09, -10.81, 83.85, 11.95, -67.85, -23.2, 4.66, 17.6, -9.75, 7.03, 7.12, -5.54, 5.01, -6.33, -9.75, -6.85, 7.03, -5.62, 4.66, 6.42, 83.68, -11.96, 68.2, 23.12, 6.59, 17.74])
ex3_1 = deg_to_rad([-2.38, -44.3, 83.85, 11.95, -67.85, -23.2, 4.66, 17.62, -9.58, 6.95, 7.21, -5.1, 5.18, -6.33, -9.58, -6.94, 7.2, -5.18, 5.01, 6.42, 83.68, -11.96, 68.2, 23.12, 6.59, 17.74])
ex3_2 = deg_to_rad([-1.76, 33.48, 83.85, 11.95, -67.85, -23.2, 4.66, 17.6, -9.75, 6.86, 7.12, -5.36, 5.01, -6.33, -9.75, -6.94, 7.03, -5.53, 4.75, 6.33, 83.68, -11.96, 68.2, 23.12, 6.59, 17.74])

ex4_0 = deg_to_rad([0.88, -11.25, 90.35, 10.9, -70.93, -7.82, -15.82, 42.79, -9.49, 6.86, 7.3, -5.1, 5.1, -6.5, -9.49, -6.85, 7.2, -5.1, 4.75, 6.51, 89.04, -11.43, 74.71, 2.99, 11.25, 43.89])
ex4_1 = deg_to_rad([-0.35, -8.97, 92.46, 8.17, -72.34, -5.1, 4.83, 17.6, -4.48, -19.07, 19.16, -2.9, -6.77, 3.43, -4.48, -45.44, 15.47, -5.18, -0.7, 22.77, 88.33, -26.9, 68.9, 2.99, 6.06, 17.72])
ex4_2 = deg_to_rad([-0.35, -8.97, 85.78, 26.19, -72.78, -13.97, 3.07, 17.62, -7.56, 45.27, 10.73, -5.28, 4.04, -22.76, -7.56, 11.78, 16.08, -5.27, 0.97, 4.57, 91.5, -11.52, 70.05, 11.87, 5.89, 17.72])

msup0 = deg_to_rad([0.61, -0.79, 80.95, 15.64, -80.6, -56.51, -2.46, 14.97, 0.09, -0.17, -25.93, 39.9, -20.13, 0.18, 0.09, 0.27, -26.02, 40.08, -20.12, -0.09, 80.95, -15.38, 80.24, 56.52, 1.76, 14.92])
msup1 = deg_to_rad([0.61, -0.79, -58.8, 7.82, -79.02, -37.35, -15.21, 17.69, 0.09, -0.17, -25.93, 39.9, -20.31, 0.18, 0.09, 0.27, -25.84, 39.99, -20.04, -0.09, -54.31, -7.03, 84.37, 45.09, 23.03, 14.92])
msuprt2 = deg_to_rad([0.61, -0.79, -58.8, 8.26, -79.02, -37.26, -15.21, 17.69, 0, -0.17, -25.93, 39.99, -20.22, 0.18, 0, 0.27, -25.93, 39.99, -20.04, -0.09, -28.21, -4.92, 83.14, 34.63, 23.29, 14.92])
msuplt3 = deg_to_rad([0.61, -0.79, -28.74, 14.59, -80.77, -39.46, -21.01, 17.69, 0, -0.17, -25.93, 39.99, -20.22, 0.18, 0, 0.18, -25.84, 40.08, -20.04, -0.09, -58.97, -9.49, 83.76, 41.14, 23.03, 14.92])

# Define exercise and massage routines, as shown in the video
def exercise(stage, speed):
    if stage == "1":
        main.speak("exercise 1")
        main.move_nao_joints(ex1_2)  # standing position
        for _ in range(3):
            main.move_nao_joints(ex1_1, speed)
            time.sleep(1)
            main.move_nao_joints(ex1_3, speed)
            time.sleep(1)
        main.move_nao_joints(ex1_2)

    elif stage == "2":
        main.speak("exercise 2")
        main.move_nao_joints(ex1_2)
        main.move_nao_joints(ex2_0)
        for _ in range(3):
            main.move_nao_joints(ex2_3, speed * 0.5)
            time.sleep(1)
            main.move_nao_joints(ex2_1, speed * 0.5)
            time.sleep(1)
            main.move_nao_joints(ex2_2, speed * 0.5)
            time.sleep(1)
            main.move_nao_joints(ex2_1, speed * 0.5)
            time.sleep(1)
        main.move_nao_joints(ex2_0)
        main.move_nao_joints(ex1_2)

    elif stage == "3":
        main.speak("exercise 3")
        main.move_nao_joints(ex3_0)
        for _ in range(3):
            main.move_nao_joints(ex3_1, speed)
            main.move_nao_joints(ex3_2, speed)
        main.move_nao_joints(ex3_0)

    elif stage == "4":
        main.speak("exercise 4")
        main.move_nao_joints(ex4_0)
        for _ in range(3):
            main.move_nao_joints(ex4_1, speed)
            main.move_nao_joints(ex4_2, speed)
        main.move_nao_joints(ex4_0)

    else:
        raise ValueError("Invalid exercise stage.")

# Upper back massage
def massageup():
    main.move_nao_joints(msup0)
    main.move_nao_joints(msup1)
    for _ in range(20):
        main.move_nao_joints(msuprt2)
        main.move_nao_joints(msuplt3)
    main.move_nao_joints(msup0)
    main.move_nao_joints(ex1_2)